
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ПолучитьФункциональнуюОпцию("уатАдресноеХранение") Тогда
		ТекстСообщения = НСтр("ru = 'Адресное хранение не используется'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьОтображениеЭлементовНастроек();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьСписокВыбораПомещенийПоСкладу(Склад, Элементы.Помещение.СписокВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	ОбновитьОтображениеЭлементовНастроек();
	
	ЗаполнитьСписокВыбораПомещенийПоСкладу(Склад, Элементы.Помещение.СписокВыбора);
	
	Помещение = "";
	ДеревоЯчеек.ПолучитьЭлементы().Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеПриИзменении(Элемент)
	
	ДеревоЯчеек.ПолучитьЭлементы().Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоЯчеек

&НаКлиенте
Процедура ДеревоЯчеекПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоЯчеек.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ЭлементДерева = ДеревоЯчеек.НайтиПоИдентификатору(ТекущаяСтрока);
		
		ЭлементДерева.Пометка = ЭлементДерева.Пометка % 2;
		
		ПроставитьПометкиВниз(ЭлементДерева);
		ПроставитьПометкиВверх(ЭлементДерева);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерезаполнитьСписокЯчеек(Команда)
	
	ОчиститьСообщения();
	
	Если Склад.Пустая() Тогда
		
		ТекстОшибки = НСтр("ru = 'Не выбран склад'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Склад");
		
	ИначеЕсли ПустаяСтрока(Помещение) Тогда
		
		ТекстОшибки = НСтр("ru = 'Не выбрано помещение'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "Помещение");
		
	Иначе
		
		ДлительнаяОперация = ПерезаполнитьСписокЯчеекНаСервере();
		
		Оповещение = Новый ОписаниеОповещения("ПерезаполнитьСписокЯчеекЗавершение", ЭтотОбъект);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.Заголовок = НСтр("ru = 'Заполнение списка ячеек'");
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	Для Каждого ЭлементДерева Из ДеревоЯчеек.ПолучитьЭлементы() Цикл
		ЭлементДерева.Пометка = 1;
		ПроставитьПометкиВниз(ЭлементДерева);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	Для Каждого ЭлементДерева Из ДеревоЯчеек.ПолучитьЭлементы() Цикл
		ЭлементДерева.Пометка = 0;
		ПроставитьПометкиВниз(ЭлементДерева);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	РазвернутьВсеСтрокиДереваЯчеек();
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	СвернутьВсеСтрокиДереваЯчеек();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеПоСтроке(Команда)
	
	Если Элементы.ДеревоЯчеек.ТекущиеДанные <> Неопределено Тогда
		
		ИдентификаторЭлемента = Элементы.ДеревоЯчеек.ТекущиеДанные.ПолучитьИдентификатор();
		
		ЭлементДерева = ДеревоЯчеек.НайтиПоИдентификатору(ИдентификаторЭлемента);
		
		Если ЭлементДерева <> Неопределено Тогда
			РазвернутьВсеСтрокиДереваЯчеек(ЭлементДерева);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеПоСтроке(Команда)
	
	Если Элементы.ДеревоЯчеек.ТекущиеДанные <> Неопределено Тогда
		
		ИдентификаторЭлемента = Элементы.ДеревоЯчеек.ТекущиеДанные.ПолучитьИдентификатор();
		
		ЭлементДерева = ДеревоЯчеек.НайтиПоИдентификатору(ИдентификаторЭлемента);
		
		Если ЭлементДерева <> Неопределено Тогда
			СвернутьВсеСтрокиДереваЯчеек(ЭлементДерева);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПечатныеФормыШтрихкодов(Команда)
	
	Если ШаблонЭтикетки.Пустая() Тогда
		ТекстОшибки = НСтр("ru = 'Не выбран шаблон этикекти'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "ШаблонЭтикетки");
		Возврат;
	КонецЕсли;
	
	ПараметрыПечати = ПолучитьПараметрыПечати();
	
	Если ПараметрыПечати.Ячейки.Количество() = 0 Тогда
		ТекстОшибки = НСтр("ru = 'Не выбраны ячейки для печати'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки, , "ДеревоЯчеек");
		Возврат;
	КонецЕсли;
	
	ПараметрКоманды = Новый Массив();
	ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.ШаблоныЭтикетокИЦенниковБПО.ПустаяСсылка"));
	
	МодульУправлениеПечатьюКлиент = ОбщегоНазначенияБПОКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");
	МодульУправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.SUAT_ПечатьШтрихкодовЯчеек", "Ценники", 
		ПараметрКоманды, ЭтотОбъект, ПараметрыПечати);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьОтображениеЭлементовНастроек()
	
	Элементы.Помещение.Видимость = Не Склад.Пустая();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораПомещенийПоСкладу(Склад, СписокВыбора)
	
	СписокВыбора.Очистить();
	
	Если Не Склад.Пустая() Тогда
		
		СписокПомещений = ПолучитьСписокПомещенийПоСкладу(Склад);
		
		СписокВыбора.ЗагрузитьЗначения(СписокПомещений);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокПомещенийПоСкладу(Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Помещение
		|ИЗ
		|	Справочник.уатСкладскиеЯчейки
		|ГДЕ
		|	Владелец = &Склад
		|	И Помещение <> """"";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Помещение");
	
КонецФункции

&НаСервере
Функция ПерезаполнитьСписокЯчеекНаСервере()
	
	ДеревоЯчеек.ПолучитьЭлементы().Очистить();
	
	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("ДеревоЯчеек", РеквизитФормыВЗначение("ДеревоЯчеек"));
	ПараметрыПроцедуры.Вставить("Склад", Склад);
	ПараметрыПроцедуры.Вставить("Помещение", Помещение);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"Обработки.SUAT_ПечатьШтрихкодовЯчеек.ПерезаполнитьДеревоЯчеекПоПараметрамВФоне", 
		ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПерезаполнитьСписокЯчеекЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Результат.Сообщения) Тогда
		
		Для индекс = 0 По Результат.Сообщения.ВГраница() Цикл
			Результат.Сообщения[индекс].Сообщить();
		КонецЦикла;
		
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		ПерезаполнитьСписокЯчеекЗавершениеНаСервере(Результат.АдресРезультата);
		
		РазвернутьВсеСтрокиДереваЯчеек();
		
	Иначе
		
		ТекстОшибки = НСтр("ru = 'Возникла ошибка при перезаполнении списка ячеек'");
		
		Если Результат.Статус = "Ошибка" Тогда
			ТекстОшибки = СтрШаблон("%1:
			|%2", ТекстОшибки, Результат.КраткоеПредставлениеОшибки);
		КонецЕсли;
		
		ПоказатьПредупреждение(, ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСписокЯчеекЗавершениеНаСервере(АдресРезультата)
	
	ДеревоЯчеекРезультат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ЗначениеВРеквизитФормы(ДеревоЯчеекРезультат, "ДеревоЯчеек");
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеСтрокиДереваЯчеек(ЭлементСтрокиДерева = Неопределено)
	
	Если ЭлементСтрокиДерева = Неопределено Тогда
		
		Для Каждого ЭлементДерева Из ДеревоЯчеек.ПолучитьЭлементы() Цикл
			РазвернутьВсеСтрокиДереваЯчеек(ЭлементДерева);
		КонецЦикла;
		
	Иначе
		Элементы.ДеревоЯчеек.Развернуть(ЭлементСтрокиДерева.ПолучитьИдентификатор(), Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеСтрокиДереваЯчеек(ЭлементСтрокиДерева = Неопределено)
	
	Если ЭлементСтрокиДерева = Неопределено Тогда
		
		Для Каждого ЭлементДерева Из ДеревоЯчеек.ПолучитьЭлементы() Цикл
			СвернутьВсеСтрокиДереваЯчеек(ЭлементДерева);
		КонецЦикла;
		
	Иначе
		
		ЭлементыДочерние = ЭлементСтрокиДерева.ПолучитьЭлементы();
		
		Для Каждого ЭлементДерева Из ЭлементыДочерние Цикл
			СвернутьВсеСтрокиДереваЯчеек(ЭлементДерева);
		КонецЦикла;
		
		Если ЭлементыДочерние.Количество() > 0 Тогда
			Элементы.ДеревоЯчеек.Свернуть(ЭлементСтрокиДерева.ПолучитьИдентификатор());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьПометкиВниз(ДанныеСтроки)
	
	Значение = ДанныеСтроки.Пометка;
	
	Для Каждого Потомок Из ДанныеСтроки.ПолучитьЭлементы() Цикл
		
		Потомок.Пометка = Значение;
		
		ПроставитьПометкиВниз(Потомок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьПометкиВверх(ДанныеСтроки)
	
	РодительСтроки = ДанныеСтроки.ПолучитьРодителя();
	
	Если РодительСтроки <> Неопределено Тогда
		
		ВсеИстина = Истина;
		НеВсеЛожь = Ложь;
		
		Для Каждого Потомок Из РодительСтроки.ПолучитьЭлементы() Цикл
			ВсеИстина = ВсеИстина И (Потомок.Пометка = 1);
			НеВсеЛожь = НеВсеЛожь Или Булево(Потомок.Пометка);
		КонецЦикла;
		
		Если ВсеИстина Тогда
			РодительСтроки.Пометка = 1;
		ИначеЕсли НеВсеЛожь Тогда
			РодительСтроки.Пометка = 2;
		Иначе
			РодительСтроки.Пометка = 0;
		КонецЕсли;
		
		ПроставитьПометкиВверх(РодительСтроки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЯчейкиКПечати()
	
	ЯчейкиКПечати = Новый Массив();
	
	Дерево = РеквизитФормыВЗначение("ДеревоЯчеек");
	
	ОтборСтрок = Новый Структура();
	ОтборСтрок.Вставить("Пометка", 1);
	ОтборСтрок.Вставить("ЭтоСтрокаДляПечати", Истина);
	
	НайденныеСтроки = Дерево.Строки.НайтиСтроки(ОтборСтрок, Истина);
	
	Для индекс = 0 По НайденныеСтроки.ВГраница() Цикл
		ЯчейкиКПечати.Добавить(НайденныеСтроки[индекс].Ссылка);
	КонецЦикла;
	
	Возврат ЯчейкиКПечати;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыПечати()
	
	ПараметрыПечати = Новый Структура();
	ПараметрыПечати.Вставить("Ячейки", ПолучитьЯчейкиКПечати());
	ПараметрыПечати.Вставить("ШаблонЭтикетки", ШаблонЭтикетки);
	
	Возврат ПараметрыПечати;
	
КонецФункции

#КонецОбласти
