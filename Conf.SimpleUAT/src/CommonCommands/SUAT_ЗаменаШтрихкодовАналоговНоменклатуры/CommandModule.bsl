
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Оповещение = Новый ОписаниеОповещения("ПодтверждениеЗапускаЗадания", ЭтотОбъект);
	
	ТекстВопроса = НСтр("ru = 'Выполнить запуск регламентного задания замены штрихкодов аналогов номенклатуры без остатка?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодтверждениеЗапускаЗадания(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеФоновогоЗадания = "";
	РезультатЗапуска = ЗапуститьЗаданиеЗаменыШтрихкодовАналоговНоменклатурыБезОстатка(ПредставлениеФоновогоЗадания);
	
	Контекст = Новый Структура();
	Контекст.Вставить("ПредставлениеФоновогоЗадания", ПредставлениеФоновогоЗадания);
	
	Оповещение = Новый ОписаниеОповещения("ЗапуститьЗаданиеЗаменыШтрихкодовАналоговНоменклатурыБезОстаткаЗавершение", 
		ЭтотОбъект, Контекст);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.Заголовок = ПредставлениеФоновогоЗадания;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатЗапуска, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ЗапуститьЗаданиеЗаменыШтрихкодовАналоговНоменклатурыБезОстатка(ПредставлениеФоновогоЗадания)
	
	РезультатЗапуска = Новый Структура();
	РезультатЗапуска.Вставить("Статус", "Выполняется");
	РезультатЗапуска.Вставить("ИдентификаторЗадания");
	РезультатЗапуска.Вставить("КраткоеПредставлениеОшибки", "");
	РезультатЗапуска.Вставить("ПодробноеПредставлениеОшибки", "");
	РезультатЗапуска.Вставить("Сообщения", Новый ФиксированныйМассив(Новый Массив));
	РезультатЗапуска.Вставить("АдресРезультата", "");
	РезультатЗапуска.Вставить("АдресДополнительногоРезультата", "");
	
	УстановитьПривилегированныйРежим(Истина);
	МетаданныеРЗ = Метаданные.РегламентныеЗадания.SUAT_ЗаменаШтрихкодовАналоговНоменклатурыБезОстатка;
	Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(МетаданныеРЗ);
	
	РезультатВыполнения = РегламентныеЗаданияСлужебный.ВыполнитьРегламентноеЗаданиеВручную(Задание);
	
	Если РезультатВыполнения.ЗапускВыполнен Тогда
		
		РезультатЗапуска.ИдентификаторЗадания = РезультатВыполнения.ИдентификаторФоновогоЗадания;
		ПредставлениеФоновогоЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Запуск вручную: %1'"), РегламентныеЗаданияСлужебный.ПредставлениеРегламентногоЗадания(Задание));
		
	Иначе
		
		ПредставлениеФоновогоЗадания = РезультатВыполнения.ПредставлениеФоновогоЗадания;
		
		Отбор = Новый Структура;
		Отбор.Вставить("ИдентификаторРегламентногоЗадания", Строка(Задание.УникальныйИдентификатор));
		Отбор.Вставить("ПолучитьПоследнееФоновоеЗаданиеРегламентногоЗадания");
		ТаблицаСвойствФоновыхЗаданий = РегламентныеЗаданияСлужебный.СвойстваФоновыхЗаданий(Отбор);
		ТаблицаСвойствФоновыхЗаданий.Сортировать("Конец Возр");
		
		ОбщегоНазначенияКлиентСервер.Проверить(ТаблицаСвойствФоновыхЗаданий.Количество() > 0, 
			НСтр("ru = 'Ошибка запуска регламентного задания'"));
		
		Если Не ЗначениеЗаполнено(ТаблицаСвойствФоновыхЗаданий[0].Конец) Тогда
			СвойстваФоновогоЗадания = ТаблицаСвойствФоновыхЗаданий[0];
		Иначе
			СвойстваФоновогоЗадания = ТаблицаСвойствФоновыхЗаданий[ТаблицаСвойствФоновыхЗаданий.Количество()-1];
		КонецЕсли;
		
		Если СвойстваФоновогоЗадания.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
			РезультатЗапуска.Статус = "Выполнено";
		ИначеЕсли СвойстваФоновогоЗадания.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
			РезультатЗапуска.Статус = "Ошибка";
			РезультатЗапуска.КраткоеПредставлениеОшибки = СвойстваФоновогоЗадания.ОписаниеИнформацииОбОшибке;
		ИначеЕсли СвойстваФоновогоЗадания.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
			РезультатЗапуска.Статус = "Ошибка";
			РезультатЗапуска.КраткоеПредставлениеОшибки = НСтр("ru = 'Отменено пользователем'");
		КонецЕсли;
		
		РезультатЗапуска.ПодробноеПредставлениеОшибки = РезультатЗапуска.КраткоеПредставлениеОшибки;
		РезультатЗапуска.ИдентификаторЗадания = СвойстваФоновогоЗадания.Идентификатор;
		
		ПредставлениеФоновогоЗадания = СвойстваФоновогоЗадания.Наименование;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	РезультатЗапуска.ИдентификаторЗадания = Новый УникальныйИдентификатор(РезультатЗапуска.ИдентификаторЗадания);
	
	Возврат РезультатЗапуска;
	
КонецФункции

&НаКлиенте
Процедура ЗапуститьЗаданиеЗаменыШтрихкодовАналоговНоменклатурыБезОстаткаЗавершение(Результат, Контекст) Экспорт
	
	ОчиститьСообщения();
	
	Если ТипЗнч(Результат.Сообщения) = Тип("ФиксированныйМассив") Тогда
		
		Для индекс = 0 По Результат.Сообщения.ВГраница() Цикл
			Результат.Сообщения[индекс].Сообщить();
		КонецЦикла;
		
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		ТекстСообщения = НСтр("ru = 'Задание ""%1"" выполнено.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, Контекст.ПредставлениеФоновогоЗадания);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	Иначе
		
		Если Не ПустаяСтрока(Результат.КраткоеПредставлениеОшибки) Тогда
			ТекстПредупреждения = Результат.КраткоеПредставлениеОшибки;
		ИначеЕсли Результат.Статус = "Отменено" Тогда
			ТекстПредупреждения = НСтр("ru = 'Задание было отменено пользователем!'");
		Иначе
			ТекстПредупреждения = "";
		КонецЕсли;
		
		Если Не ПустаяСтрока(Результат.ПодробноеПредставлениеОшибки) Тогда
			
			Если ПустаяСтрока(ТекстПредупреждения) Тогда
				ТекстПредупреждения = Результат.ПодробноеПредставлениеОшибки;
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПустаяСтрока(ТекстПредупреждения) Тогда
			ТекстПредупреждения = НСтр("ru = 'Не удалось получить результат выполнения задания!'");
		КонецЕсли;
		
		ПоказатьПредупреждение(, ТекстПредупреждения, , Контекст.ПредставлениеФоновогоЗадания);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
